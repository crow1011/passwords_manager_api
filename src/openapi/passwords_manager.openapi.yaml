openapi: "3.0.0"
info:
  version: 1.0.0
  title: Passwords Manager
servers:
  - url: http://localhost:5000/api/v1
paths:
  /policy:
    get:
      summary: Get policies
      operationId: handlers.policy.get_policy
      tags:
        - policy
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of policies
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Policies"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a policy
      operationId: handlers.policy.create_policy
      tags:
        - policy
      requestBody:
        description: create password generation policy
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policy/{name}:
    get:
      summary: Get policy by Policy name
      operationId: handlers.policy.retrieve_policy
      tags:
        - policy
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the policy to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Destroy policy by Policy name
      operationId: handlers.policy.destroy_policy
      tags:
        - policy
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the policy to destroy
          schema:
            type: string
      responses:
        '204':
          description: Successfully destroy
  /password/{policy_name}:
    get:
      summary: create password by policy
      operationId: handlers.password.get_password
      tags:
        - password
      parameters:
        - name: policy_name
          in: path
          required: true
          description: The name of the policy
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Password"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Password:
      type: object
      required:
        - password
      properties:
        password:
          type: string
    Policy:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        password_length:
          type: integer
        symbols:
          type: string
        numbers:
          type: string
        vowels:
          type: string
        consonants:
          type: string
    Policies:
      type: array
      items:
        $ref: "#/components/schemas/Policy"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string